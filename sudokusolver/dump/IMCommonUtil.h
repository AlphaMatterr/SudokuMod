/*
 *     Generated by class-dump 3.1.2.
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2007 by Steve Nygard.
 */

#import "_ADBannerContentSizeIdentifierLandscape.h"

@interface IMCommonUtil : _ADBannerContentSizeIdentifierLandscape
{
}

+ (id)convertToBase62:(int)fp8;
+ (id)getUserID:(int)fp8;
+ (void)removeUserID:(int)fp8;
+ (void)addUserID:(int)fp8 withValue:(id)fp12;
+ (id)getUserLocationCountry;
+ (id)getUserLocationState;
+ (id)getUserLocationCity;
+ (void)setUserLocationWithCity:(id)fp8 state:(id)fp12 country:(id)fp16;
+ (float)getUserLocationAccuracyInMeters;
+ (float)getUserLocationLongitude;
+ (float)getUserLocationLatitude;
+ (BOOL)hasUserLocation;
+ (void)setUserLocationWithLatitude:(float)fp8 longitude:(float)fp12 accuracy:(float)fp16;
+ (BOOL)isLocationValid:(float)fp8 longitude:(float)fp12;
+ (id)getUserInterests;
+ (void)setUserInterests:(id)fp8;
+ (id)getUserAreaCode;
+ (void)setUserAreaCode:(id)fp8;
+ (id)getUserPostalCode;
+ (void)setUserPostalCode:(id)fp8;
+ (id)getUserLanguage;
+ (void)setUserLanguage:(id)fp8;
+ (int)getUserHasChildren;
+ (void)setUserHasChildren:(int)fp8;
+ (int)getUserSexualOrientation;
+ (void)setUserSexualOrientation:(int)fp8;
+ (int)getUserMaritalStatus;
+ (void)setUserMaritalStatus:(int)fp8;
+ (int)getUserAge;
+ (void)setUserAge:(int)fp8;
+ (int)getUserIncome;
+ (void)setUserIncome:(int)fp8;
+ (id)getUserDateOfBirth;
+ (void)setUserDateOfBirth:(id)fp8;
+ (void)setUserDateOfBirthWithMonth:(unsigned int)fp8 day:(unsigned int)fp12 year:(unsigned int)fp16;
+ (int)getUserEthnicity;
+ (void)setUserEthnicity:(int)fp8;
+ (int)getUserEducation;
+ (void)setUserEducation:(int)fp8;
+ (int)getUserGender;
+ (void)setUserGender:(int)fp8;
+ (id)getMKVersion;
+ (id)getVersion;
+ (int)getDeviceIdMask;
+ (void)setDeviceIdMask:(int)fp8;
+ (id)getLogPrefix;
+ (void)setLogPrefix:(id)fp8;
+ (int)getLogLevel;
+ (void)setLogLevel:(int)fp8;
+ (id)publisherSiteId;
+ (void)initialize:(id)fp8;
+ (id)mergeDict:(id)fp8 overDict:(id)fp12 recursively:(BOOL)fp16;
+ (id)dictionaryFromURLQuery:(id)fp8;
+ (id)colorWithHexString:(id)fp8;
+ (float)colorComponentFrom:(id)fp8 start:(unsigned int)fp12 length:(unsigned int)fp16;
+ (id)getRandomUIntString;
+ (unsigned int)getRandomUInt;
+ (id)operatorName;
+ (id)operatorMobileNetworkCode;
+ (id)operatorMobileCountryCode;
+ (id)applicationDocumentsDirectoryForProduct:(id)fp8;
+ (id)applicationDisplayName;
+ (id)applicationVersion;
+ (id)applicationBundleId;
+ (id)getMachineHardware;
+ (id)requestSysCtlByName:(id)fp8 useIntType:(BOOL)fp12;
+ (unsigned long long)timeSince1970InMillisecondsFromNow;
+ (unsigned long long)timeSince1970InMillisecondsFromDate:(id)fp8;
+ (unsigned long long)timeZoneOffsetInMilliseconds;
+ (id)getLastKnowLocationTimestamp;
+ (id)localeCountryName;
+ (id)localeCountryCode;
+ (id)localeIdentifier;
+ (id)decodeLongLongToMac:(unsigned long long)fp8;
+ (unsigned long long)macToLongLong:(id)fp8;
+ (id)getSSIDOfConnectedNetwork;
+ (id)getBSSIDOfConnectedNetwork;
+ (id)getCurrentNetworkInfo;
+ (id)getAllSavedNetworkInterfaces;
+ (id)getWebViewUserAgent;
+ (void)fetchWebViewUserAgent;
+ (void)reloadWebViewUserAgent;
+ (id)getLTVID;
+ (void)setLTVID:(id)fp8;
+ (id)generateUUID;
+ (id)applicationInstanceId;
+ (id)identifierForAdvertising;
+ (id)deviceInMobiODIN1;
+ (id)deviceStandardODIN1;
+ (id)getUIDMapValueWithRandomKey:(id)fp8 mask:(int)fp12 mixIn:(id)fp16;
+ (id)getUIDMapValueWithRandomKey:(id)fp8 mask:(int)fp12;
+ (id)getUIDMapValueWithRandomKey:(id)fp8;
+ (id)getUIDMapVersion;
+ (id)getUIDMapAsDictionaryForMask:(int)fp8 mixIn:(id)fp12;
+ (id)getUIDMapAsDictionaryForMask:(int)fp8;
+ (id)getUIDMapAsDictionary;
+ (id)getUIDMapAsJSONStringForMask:(int)fp8 mixIn:(id)fp12;
+ (id)getUIDMapAsJSONStringForMask:(int)fp8;
+ (id)getUIDMapAsJSONString;
+ (id)getUIDMapAsQueryStringForMask:(int)fp8 mixIn:(id)fp12;
+ (id)getUIDMapAsQueryStringForMask:(int)fp8;
+ (id)getUIDMapAsQueryString;
+ (id)uidMapValueWithRandomKey:(id)fp8 mask:(int)fp12 mixIn:(id)fp16;
+ (void)addToUIDMap:(id *)fp8 Key:(id)fp12 Value:(id)fp16 RandomElement:(id)fp20;
+ (id)XORInput1:(id)fp8 WithInput2:(id)fp12;
+ (id)stringFromRSAEncryption:(id)fp8;
+ (id)EncodeRSA:(id)fp8 publicKey:(struct __SecKey *)fp12;
+ (id)sha1Hash:(id)fp8;
+ (id)md5Hash:(id)fp8;
+ (id)gzipData:(id)fp8;
+ (id)decodeFromBase64:(id)fp8;
+ (id)encodeToBase64:(id)fp8;
+ (id)getDecodedURLString:(id)fp8;
+ (id)getURLEncoded:(id)fp8;
+ (id)deserialize:(id)fp8 error:(id *)fp12;
+ (id)serializeObject:(id)fp8 error:(id *)fp12;

@end

